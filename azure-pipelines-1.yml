# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest



steps:
- checkout: self
  fetchDepth: 0
 



- task: SonarCloudPrepare@3
  inputs:
    SonarCloud: 'a2865358-0159-4328-80aa-8537e963ca6f'
    organization: 'sotona henry'
    scannerMode: 'other'
    extraProperties: |
      # Additional properties that will be passed to the scanner,
      # Put one key=value per line, example:
      # sonar.exclusions=**/*.bin
      sonar.projectKey=rosot2010
      sonar.projectName=todocicdca3

- task: Gradle@3
  inputs:
    workingDirectory: '$(Build.SourcesDirectory)/myApp'
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '17'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'clean build test jacocoTestReport sonar'

- task: SonarCloudPublish@3
  inputs:
    pollingTimeoutSec: '300'
# Optional: Publish coverage results to Azure DevOps
- task: PublishCodeCoverageResults@2
  inputs:
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/build/reports/jacoco/test/jacocoTestReport.xml'
    pathToSources: '$(System.DefaultWorkingDirectory)/src/main/java/'