# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

stages:
- stage: Build
  jobs:
  - job: BuildJob
    steps:
    - task: Gradle@3
      inputs:
        workingDirectory: ''
        gradleWrapperFile: 'gradlew'
        gradleOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '17'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/TEST-*.xml'
        tasks: 'clean build test jacocoTestReport'
    
    - task: PublishCodeCoverageResults@2
      inputs:
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/build/reports/jacoco/test/jacocoTestReport.xml'
        pathToSources: '$(System.DefaultWorkingDirectory)/src/main/java/'

    - task: CopyFiles@2
      inputs:
        contents: '**/build/libs/*.jar'
        targetFolder: '$(build.artifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'drop'

- stage: CodeAnalysis
  jobs:
  - job: SonarCloudAnalysis
    steps:
    - checkout: self
      fetchDepth: 0

    - task: SonarCloudPrepare@3
      inputs:
        SonarCloud: 'a2865358-0159-4328-80aa-8537e963ca6f'
        organization: 'sotona henry'
        scannerMode: 'other'
        extraProperties: |
         sonar.projectKey=rosot2010
         sonar.projectName=todocicdca3

    - task: SonarCloudAnalyze@3
      inputs:
             jdkversion: 'JAVA_HOME_17_X64'

    - task: SonarCloudPublish@3
      inputs:
        pollingTimeoutSec: '300'
    - task: SonarCloudPrepare@3
      inputs:
        SonarQube: 'sanacicdca3'
        organization: 'x00160463'
        scannerMode: 'other'
- stage: Deploy
  jobs:
  - deployment: DeployJob
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'Dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: JavaToolInstaller@0
            inputs:
              versionSpec: '$(javaVersion)'
              jdkArchitectureOption: 'x64'
              jdkSourceOption: 'PreInstalled'
          
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(System.ArtifactsDirectory)'
          
          - script: |
              JAR_FILE=$(find $(System.ArtifactsDirectory) -name *SNAPSHOT.jar)
              if [ -z "$JAR_FILE" ]; then
                echo "No JAR file found"
                exit 1
              fi
              echo "Found JAR file: $JAR_FILE"
              java -jar $JAR_FILE &
            displayName: 'Deploy Spring Boot app'


   

  
